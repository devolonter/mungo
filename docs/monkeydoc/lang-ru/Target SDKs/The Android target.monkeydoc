> Целевая платформа Android

Android от Google — чрезвычайно популярная OC для смартфонов и планшетов.

>> Вам понадобится

* [Android SDK](http://developer.android.com/sdk/index.html). Вам скорее всего понадобится только версия "SDK Tools", а не "Eclipse + ADT Plugin".

* [Java SE JDK](http://www.oracle.com/technetwork/java/javase/downloads/index.html). Для пользователей Windows: убедитесь, что вы скачиваете 32-х битную версию, даже если вы работаете в 64-х битной версии ОС

* Для пользователей Windows и MacOS также понадобится [ANT](http://ant.apache.org/bindownload.cgi).

>> Начало работы

Для использования платформы Android переменные `ANDROID_PATH` (Windows/MacOS), `JDK_PATH` (Windows) и `ANT_PATH` (Windows/MacOS) в конфигурационном  файле [[Trans|Транслятора]] должны иметь корректное значение.

Загруженный установщик Android SDK всего лишь устанавливает SDK-менеджер на ваш компьютер. Чтобы установить актуальную версию SDK, следует запустить SDK-менеджер. Убедитесь, что установлена, как минимум, SDK для Android 3.2 (API 13).

Чтобы запустить приложение на реальном устройстве под MacOS, вы должны подключить его к компьютеру с помощью usb-кабеля. Не забудьте включить «Режим отладки по USB» в настройках устройства.

Чтобы запустить приложение на реальном устройстве в Windows, вам следует установить драйверы для usb-кабеля. Драйвера для usb-кабеля от производителя являются предпочтительным вариантом. Однако, они часто идут в комплекте с чрезвычайно раздутыми вспомогательными приложениями. Немного поискав в сети, вы сможете найти usb-драйвер, подходящий для вашего устройства. 

>> Подпись приложений

Перед публикацией или добавлением встроенных покупок приложение должно быть подписано.

Первым шагом в подписании приложения является генерация ключа для него. Инструмент для этого находится в Java JDK, поэтому этот путь должен быть прописан в переменной окружения PATH. Чтобы сгенерировать ключ, используйте что-нибудь вроде:

`keytool -genkey -v -keystore release-key.keystore -alias release-key-alias -keyalg RSA -keysize 2048 -validity 10000`

Если вы выполните это из командной строки, вам будет предложено ввести информацию об авторе и пароль. После завершения, будет сгенерирован приватный ключ "release-key.keystore" - это ключ вашего приложения. Вы не должны его терять, поскольку он понадобится вам каждый раз, когда вы будете выпускать обновление для вашего приложения.

Если вы выбрали пароль "password" при генерации ключа, тогда ключ может быть использован "как есть" - просто скопируйте его в основную директорию с исходными файлами приложения и задайте значение параметра конфигурации приложения #ANDROID_SIGN_APP равным True, чтобы включить подпись. При последующей сборке приложения, оно будет подписано.

Если вы использовали другой пароль, другое имя или другое расположение ключа, вам также нужно будет изменить некоторые или все из следующих параметров конфигурации (параметры приведены со значениями по умолчанию):

`#ANDROID_KEY_STORE="../../release-key.keystore"`~n
`#ANDROID_KEY_ALIAS="release-key-alias"`~n
`#ANDROID_KEY_STORE_PASSWORD="password"`~n
`#ANDROID_KEY_ALIAS_PASSWORD="password"`~n

>> Публикация на Google Play

Чтобы начать публиковать приложения на Google Play, вам нужно создать аккаунт разработчика на https://play.google.com/apps/publish/

Имея аккаунт разработчика, вы сможете загружать приложения, добавлять в них встроенные покупки и публиковать их.

Ваше приложение должно иметь уникальное "Имя пакета". Имя пакета задается с помощью параметра конфигурации #ANDROID_APP_PACKAGE, и желательно, чтобы оно соответствовало следующему шаблону "com.mycompany.mygame".


>> Тестирование встроенных покупок

Встроенные покупки добавляются в приложение с помощью класса [[MonkeyStore]].

Тестирование такие покупок может оказаться непростой задачей. В Android и iOS создаются тестовые аккаунты, которые затем добавляются в консоль разработчика Google Play и/или в iTunes Connect. Тестовые аккаунты представляют собой комбинацию адреса электронной почты и пароля. Однако, на Android придется предоставить более подробную информацию при первом использовании такого аккаунта.

* На Android, ваше приложение должно быть подписано, а версия загружена (но не обязательно "опубликована") в ваш аккаунт разработчика Google Play.

* Вы можете создать нового пользователя на вашем Android устройстве для тестового аккаунта (и это не обязательно должен быть «основной» пользователь). Но для этого вам потребуется каждый раз давать разрешение на отладку по USB для основного пользователя перед использованием тестового. Кроме того, вам, возможно, потребуется удалить старые версии вашего приложения у основного пользователя перед тестированием.

* Повторное использование тестовой учетной записи  на Android иногда вызывает логику "мошеннических транзакций". После этого, приложение будет выводить сообщение о невозможности обработать транзакцию, а при попытке что-то купить, а на электронную почту вам будет приходить сообщение "Сделка отменена". Решение: ждать, пока все не нормализуется, или создать новый тестовый аккаунт и воспользоваться им.

В папке с примерами Monkey-приложений есть демо для тестирования, которое вы сможете найти в bananas/mak/iaptest. Тем не менее, оно не будет работать "как есть". Вам нужно добавить файл ключей для Android, изменить BundleID для iOS, а также изменить массивы CONSUMABLES и NON_CONSUMABLES, чтобы они соответствовали идентификаторам ваших товаров.